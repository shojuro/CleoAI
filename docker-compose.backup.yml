version: '3.9'

services:
  # PostgreSQL backup service using postgres-backup-s3
  postgres-backup:
    image: schickling/postgres-backup-s3:latest
    container_name: cleoai-postgres-backup
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DB}
      - S3_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET=${BACKUP_S3_BUCKET}
      - S3_PREFIX=postgres/
      - S3_ENDPOINT=${S3_ENDPOINT:-}
      - S3_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - SCHEDULE=${BACKUP_SCHEDULE:-@daily}
      - BACKUP_KEEP_DAYS=${BACKUP_RETENTION_DAYS:-30}
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - POSTGRES_EXTRA_OPTS=--schema=public --blobs
    networks:
      - cleoai_network
    depends_on:
      - postgres
    restart: unless-stopped

  # MongoDB backup service
  mongodb-backup:
    image: tutum/mongodb-backup:latest
    container_name: cleoai-mongodb-backup
    environment:
      - MONGODB_HOST=mongo
      - MONGODB_PORT=27017
      - MONGODB_USER=${MONGO_ROOT_USERNAME}
      - MONGODB_PASS=${MONGO_ROOT_PASSWORD}
      - MONGODB_DB=${MONGODB_DATABASE}
      - S3_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET=${BACKUP_S3_BUCKET}
      - S3_PREFIX=mongodb/
      - S3_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_KEEP_DAYS=${BACKUP_RETENTION_DAYS:-30}
      - EXTRA_OPTS=--gzip
    volumes:
      - mongodb_backups:/backup
    networks:
      - cleoai_network
    depends_on:
      - mongo
    restart: unless-stopped

  # Redis backup service (using custom script)
  redis-backup:
    image: redis:7-alpine
    container_name: cleoai-redis-backup
    entrypoint: /scripts/backup.sh
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - S3_BUCKET=${BACKUP_S3_BUCKET}
      - S3_PREFIX=redis/
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    volumes:
      - ./scripts/redis-backup.sh:/scripts/backup.sh:ro
      - redis_backups:/backup
    networks:
      - cleoai_network
    depends_on:
      - redis
    restart: unless-stopped

  # Backup monitoring with Restic
  restic-backup:
    image: mazzolino/restic:latest
    container_name: cleoai-restic-backup
    hostname: cleoai-backup
    environment:
      - RESTIC_REPOSITORY=s3:${S3_ENDPOINT:-s3.amazonaws.com}/${BACKUP_S3_BUCKET}/restic
      - RESTIC_PASSWORD=${RESTIC_PASSWORD:-your-restic-password}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BACKUP_CRON=${BACKUP_SCHEDULE:-0 2 * * *}
      - RESTIC_BACKUP_SOURCES=/data
      - RESTIC_BACKUP_ARGS=--verbose --tag cleoai
      - RESTIC_FORGET_ARGS=--keep-daily 7 --keep-weekly 4 --keep-monthly 6
      - TZ=UTC
    volumes:
      - /var/lib/docker/volumes:/data/docker-volumes:ro
      - ./backups:/data/local-backups:ro
      - ./logs:/data/logs:ro
    networks:
      - cleoai_network
    restart: unless-stopped

  # Backup orchestrator and monitor
  backup-monitor:
    build:
      context: .
      dockerfile: Dockerfile.backup-monitor
    container_name: cleoai-backup-monitor
    environment:
      - BACKUP_ENABLED=${BACKUP_ENABLED:-true}
      - PROMETHEUS_PUSHGATEWAY_URL=http://prometheus:9091
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ALERT_EMAIL_TO=${ALERT_EMAIL_TO}
      - SENTRY_DSN=${SENTRY_DSN}
    volumes:
      - ./scripts/backup_monitor.py:/app/backup_monitor.py:ro
      - backup_logs:/var/log/backups
    networks:
      - cleoai_network
      - cleoai_monitoring
    depends_on:
      - postgres-backup
      - mongodb-backup
      - redis-backup
    restart: unless-stopped

volumes:
  mongodb_backups:
  redis_backups:
  backup_logs:

networks:
  cleoai_network:
    external: true
  cleoai_monitoring:
    external: true