# Default values for CleoAI Helm chart

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: "fast-ssd"
  
# Namespace configuration
namespace:
  create: true
  name: cleoai

# Common labels for all resources
commonLabels:
  app.kubernetes.io/name: cleoai
  app.kubernetes.io/instance: production
  app.kubernetes.io/managed-by: helm

# API deployment configuration
api:
  enabled: true
  replicaCount: 3
  
  image:
    repository: cleoai/api
    tag: latest
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 8000
    annotations: {}
  
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/rate-limit: "100"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: api.cleoai.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: cleoai-api-tls
        hosts:
          - api.cleoai.com
  
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 4Gi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - cleoai-api
          topologyKey: kubernetes.io/hostname
  
  env:
    - name: ENVIRONMENT
      value: production
    - name: LOG_LEVEL
      value: info
    - name: CORS_ORIGINS
      value: "https://cleoai.com,https://app.cleoai.com"
  
  secrets:
    database:
      create: true
      postgresUrl: ""
      mongodbUrl: ""
      redisUrl: ""
    auth:
      create: true
      jwtSecret: ""
    encryption:
      create: true
      masterKey: ""

# Worker deployment configuration
worker:
  enabled: true
  replicaCount: 2
  
  image:
    repository: cleoai/worker
    tag: latest
    pullPolicy: Always
  
  resources:
    requests:
      cpu: 2000m
      memory: 8Gi
      nvidia.com/gpu: 1
    limits:
      cpu: 4000m
      memory: 16Gi
      nvidia.com/gpu: 1
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    metrics:
      - type: External
        external:
          metric:
            name: inference_queue_length
          target:
            type: AverageValue
            averageValue: "50"
  
  nodeSelector:
    node.kubernetes.io/gpu: "true"
  
  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
      effect: NoSchedule
  
  persistence:
    enabled: true
    storageClass: fast-ssd
    size: 100Gi
    accessMode: ReadWriteMany
  
  env:
    - name: WORKER_TYPE
      value: inference
    - name: WORKER_CONCURRENCY
      value: "4"

# Database configurations
postgresql:
  enabled: true
  auth:
    database: cleoai
    username: cleoai_user
    existingSecret: ""
  primary:
    persistence:
      enabled: true
      size: 50Gi
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 4000m
        memory: 8Gi
  metrics:
    enabled: true
  backup:
    enabled: true
    schedule: "0 2 * * *"
    retentionDays: 7

mongodb:
  enabled: true
  auth:
    database: cleoai
    username: cleoai_user
    existingSecret: ""
  persistence:
    enabled: true
    size: 100Gi
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 4000m
      memory: 8Gi
  metrics:
    enabled: true
  replicaCount: 3

redis:
  enabled: true
  auth:
    enabled: true
    existingSecret: ""
  master:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 10Gi
  metrics:
    enabled: true

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    retention: 30d
    persistentVolume:
      enabled: true
      size: 100Gi
  grafana:
    enabled: true
    adminPassword: ""
    persistence:
      enabled: true
      size: 10Gi
    dashboards:
      default:
        cleoai-overview:
          url: https://raw.githubusercontent.com/cleoai/dashboards/main/overview.json
        cleoai-performance:
          url: https://raw.githubusercontent.com/cleoai/dashboards/main/performance.json
  alerts:
    enabled: true
    slack:
      webhookUrl: ""
      channel: "#alerts"

# Security settings
security:
  podSecurityPolicy:
    enabled: true
  networkPolicy:
    enabled: true
    ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
  serviceAccount:
    create: true
    automountServiceAccountToken: false

# Backup configuration
backup:
  enabled: true
  schedule: "0 3 * * *"
  destination: s3://cleoai-backups
  retention:
    days: 30
    weeks: 12
    months: 12

# Service mesh configuration
serviceMesh:
  enabled: false
  provider: istio

# Resource quotas
resourceQuota:
  enabled: true
  hard:
    requests.cpu: "100"
    requests.memory: "200Gi"
    limits.cpu: "200"
    limits.memory: "400Gi"
    persistentvolumeclaims: "10"

# Pod disruption budgets
podDisruptionBudget:
  api:
    enabled: true
    minAvailable: 2
  worker:
    enabled: true
    minAvailable: 1

# Priority classes
priorityClass:
  api:
    create: true
    value: 1000
  worker:
    create: true
    value: 900

# Extra manifests to deploy
extraManifests: []